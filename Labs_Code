---------------Lab2 Code (: To add 5 numbers parallelly from 2 different locations and storing the result sequentially in memory.)-----------
CODE:
ORG 0000H
MOV R0,#10H
MOV R1,#20H
MOV R3,#05H
L1: MOV A,@R0
MOV B, A
MOV A, @R1
ADD A, B
MOV @R1, A
INC R0
INC R1
DJNZ R3, L1
END

-------------Lab3 Code ( To find the determinant of 2 X 2 Matrix.)--------------
ORG 0000H
MOV R0,#10H
MOV R1,#13H
MOV A,@R0
MOV B,@R1
MUL AB
MOV R2,B
MOV R3,A
INC R0
DEC R1
MOV A,@R0
MOV B,@R1
MUL AB
MOV R4,A
CLR C
MOV A,R3
SUBB A,R4
MOV R3,A
MOV A,R2
SUBB A,B
MOV R2,A
MOV R0,#14H
MOV A,R2
MOV @R0,A
INC R0
MOV A,R3
MOV @R0,A
END

---------------Lab4 Code (TO PERFORM SORTING ON NUMBERS STORED IN MEMORY LOCATION.)---------------
ORG 0000H
CLR C
MOV R4,#09H
MOV R0,#31H
MOV R6,#0AH
LABEL3:DEC R6
MOV A,R6
MOV R5,A
MOV A,R0
MOV R1,A
INC R1
LABEL1:MOV A,@R0
SUBB A,@R1
MOV A,@R0
JC LABEL2
MOV B,@R1
MOV @R1,A
MOV @R0,B
LABEL2:INC R1
CLR C
DJNZ R5,LABEL1
INC R0
DJNZ R4,LABEL3
END

-----------------Lab5 Code (TO COUNT FREQUENCY OF A NUMBER PRESENT IN AN ARRAY OF NUMBERS STORED IN MEMORY LOCATION.)------------------
ORG 0000H
MOV R0,#30H
MOV R5,#0AH
MOV B,#00H
LABEL3:MOV A,@R0
CJNE A,#03H,LABEL1
INC B
INC R0
DJNZ R5,LABEL3
LABEL1: INC R0
DJNZ R5,LABEL3
END

----------------Lab6 Code (TO PRINT FIBONACCI SERIES)-----------------
ORG 0000H
MOV R0,#30H
MOV R1,#31H
MOV R5,#0AH
LABEL:MOV A,@R0
INC R0
ADD A,@R1
INC R1
MOV @R1,A
DJNZ R5,LABEL
END

---------------Lab7 Code (TO PRINT FACTORIAL OF 5)----------------
ORG 0000H
MOV R3,#05H
MOV R0,#01H
MOV R1,#02H
LABEL: MOV A,R0
MOV B,R1
INC R1
MUL AB
MOV R0,A
DJNZ R3,LABEL
MOV R0,#30H
MOV @R0,B
INC R0
MOV @R0,A
END

-----------------Lab8 Code (TO BLINK 8 LEDâ€™s WITH A TIME PERIOD OF 2 SECONDS)-----------------------
ORG 0000H
MOV A,#00H
MOV P2,A //MAKE P0 OUTPUT PORT
LOOP: CPL A
MOV P2,A
ACALL DELAY
SJMP LOOP
DELAY:MOV R4,#10
LABEL3:MOV R3,#200
LABEL2:MOV R2,#250
LABEL1:DJNZ R2,LABEL1
DJNZ R3,LABEL2
DJNZ R4,LABEL3
RET
END

-------------Lab9 Code (TO MAKE A COUNTER (0-9) USING 8051 AND SEVEN SEGMENT DISPLAY.)-----------------------
ORG 0000H
MOV R0,#40H
MOV @R0,#3FH
INC R0
MOV @R0,#06H
INC R0
MOV @R0,#5BH
INC R0
MOV @R0,#4FH
INC R0
MOV @R0,#66H
INC R0
MOV @R0,#6DH
INC R0
MOV @R0,#7DH
INC R0
MOV @R0,#07H
INC R0
MOV @R0,#7FH
INC R0
MOV @R0,#67H
MOV P2,#00H
LOOP: MOV R0,#40H
MOV R2,#0AH
LABEL: MOV A,@R0
MOV P2,A
ACALL DELAY
INC R0
DJNZ R2,LABEL
JMP LOOP
DELAY: MOV R3,#15H
LABEL3:MOV R4,#200
LABEL2:MOV R5,#200
LABEL1:DJNZ R5,LABEL1
DJNZ R4,LABEL2
DJNZ R3,LABEL3
RET
END

---------------Lab10 Code (TO TAKE INPUT FROM KEYPAD AND DISPLAY THE CORRESPONDING HEX DIGIT ON SEVEN SEGMENT DISPLAY.)--------------------------
ORG 0000H
MOV R0,#40H
MOV @R0,#3FH
INC R0
MOV @R0,#06H
INC R0
MOV @R0,#5BH
INC R0
MOV @R0,#4FH
INC R0
MOV @R0,#66H
INC R0
MOV @R0,#6DH
INC R0
MOV @R0,#7DH
INC R0
MOV @R0,#07H
INC R0
MOV @R0,#7FH
INC R0
MOV @R0,#67H
INC R0
MOV @R0,#5FH
INC R0
MOV @R0,#7CH
INC R0
MOV @R0,#39H
INC R0
MOV @R0,#5EH
INC R0
MOV @R0,#79H
INC R0
MOV @R0,#71H
START:
MOV P0,#00H
MOV P2,#0FFH
MOV P3,#00H
ACALL ROW0
ACALL ROW1
ACALL ROW2
ACALL ROW3
ROW0: MOV R0,#3FH
MOV P0,#0FEH
MOV A,P2
CJNE A,#0FFH,CONT1
RET
CONT1: RRC A
INC R0
JNC DISPLAY
JMP CONT1
ROW1: MOV R0,#43H
MOV P0,#0FDH
MOV A,P2
CJNE A,#0FFH,CONT2
RET
CONT2: RRC A
INC R0
JNC DISPLAY
JMP CONT2
ROW2: MOV R0,#47H
MOV P0,#0FBH
MOV A,P2
CJNE A,#0FFH,CONT3
RET
CONT3: RRC A
INC R0
JNC DISPLAY
JMP CONT3
ROW3: MOV R0,#4BH
MOV P0,#0F7H
MOV A,P2
CJNE A,#0FFH,CONT4
RET
CONT4: RRC A
INC R0
JNC DISPLAY
JMP CONT4
DISPLAY: MOV A,@R0
MOV P3,A
ACALL DELAY
JMP E
DELAY:MOV R4,#10
LABEL3:MOV R3,#200
LABEL2:MOV R2,#250
LABEL1:DJNZ R2,LABEL1
DJNZ R3,LABEL2
DJNZ R4,LABEL3
RET
E: NOP
END

--------------------Lab11 Code (TO TAKE INPUT FROM KEYPAD AND DISPLAY THE CORRESPONDING HEX DIGIT ON 16x2 LCD DISPLAY.)-----------------------
ORG 0000H
MOV R0,#40H
MOV @R0,#'0'
INC R0
MOV @R0,#'1'
INC R0
MOV @R0,#'2'
INC R0
MOV @R0,#'3'
INC R0
MOV @R0,#'4'
INC R0
MOV @R0,#'5'
INC R0
MOV @R0,#'6'
INC R0
MOV @R0,#'7'
INC R0
MOV @R0,#'8'
INC R0
MOV @R0,#'9'
INC R0
MOV @R0,#'10'
INC R0
MOV @R0,#'11'
INC R0
MOV @R0,#'12'
INC R0
MOV @R0,#'13'
INC R0
MOV @R0,#'14'
INC R0
MOV @R0,#'15'
START:
MOV P0,#00H
MOV P1,#00H
MOV P2,#0FFH
MOV P3,#00H
MOV A,#38H;
ACALL COMMAND;
ACALL DELAY;
MOV A,#0EH;
ACALL COMMAND;
ACALL DELAY;
MOV A,#01H;
ACALL COMMAND;
ACALL DELAY;
MOV A,#80H;
ACALL COMMAND;
ACALL DELAY;
//-----------
ACALL ROW0
ACALL ROW1
ACALL ROW2
ACALL ROW3
ROW0: MOV R0,#3FH
MOV P0,#0FEH
MOV A,P2
CJNE A,#0FFH,CONT1
RET
CONT1: RRC A
INC R0
JNC DATA1
JMP CONT1
ROW1: MOV R0,#43H
MOV P0,#0FDH
MOV A,P2
CJNE A,#0FFH,CONT2
RET
CONT2: RRC A
INC R0
JNC DATA1
JMP CONT2
ROW2: MOV R0,#47H
MOV P0,#0FBH
MOV A,P2
CJNE A,#0FFH,CONT3
RET
CONT3: RRC A
INC R0
JNC DATA1
JMP CONT3
ROW3: MOV R0,#4BH
MOV P0,#0F7H
MOV A,P2
CJNE A,#0FFH,CONT4
RET
CONT4: RRC A
INC R0
JNC DATA1
JMP CONT4
COMMAND:CLR P3.3
MOV P1,A;
SETB P3.2;
ACALL DELAY;
CLR P3.2;
RET
DATA1:SETB P3.3;
MOV P1,A
SETB P3.2;
ACALL DELAY;
CLR P3.0
ACALL DELAY;
RET
DELAY:MOV R3,#200
LABEL2:MOV R2,#250
LABEL1:DJNZ R2,LABEL1
DJNZ R3,LABEL2
RET
E: NOP
END

-------------------------------------END--------------------------------------------------
